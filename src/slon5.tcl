
#*******************************************************************************
#*******************************************************************************
namespace eval slon5_script {

        namespace export emptyLine  \
                             fileHeader \
                             fileFooter \
                             genKTable  \
                             genGTable;

        #--------------------------------------------------------------------------
        #--------------------------------------------------------------------------
        proc emptyLine { {fileName srcFile} } {
                upvar 1 $fileName fName
                puts $fName [format ""];
        }

        #--------------------------------------------------------------------------
        #--------------------------------------------------------------------------
        proc fileHeader { srcFile prjName pkgName pkgSfx descrTxt guardName } {
                puts $srcFile [format "//------------------------------------------------------------------------------"];
                puts $srcFile [format "// This file is automatically generated. Do not edit this file                  "];
                puts $srcFile [format "//                                                                              "];
                puts $srcFile [format "// project:       ${prjName}                                                    "];
                puts $srcFile [format "// package:       ${pkgName}${pkgSfx}                                           "];
                puts $srcFile [format "//                                                                              "];
                puts $srcFile [format "// description:   ${descrTxt}                                                   "];
                puts $srcFile [format "//------------------------------------------------------------------------------"];

                emptyLine;
                puts $srcFile [format "`ifndef %s"  $guardName  ];
                puts $srcFile [format "`define %s\n"  $guardName];

                puts $srcFile [format "//******************************************************************************"];
                puts $srcFile [format "//******************************************************************************"];
                emptyLine;
        
                puts $srcFile [format "`include \"slon5.svh\""];
                emptyLine;
                
                puts $srcFile [format "package ${pkgName}${pkgSfx};"];
                emptyLine;
                puts $srcFile [format "    //--------------------------------------------------------------------------"];
                puts $srcFile [format "    import slon5_pkg::*;"];
                emptyLine;
        }

        #--------------------------------------------------------------------------
        #--------------------------------------------------------------------------
        proc fileFooter { srcFile pkgName pkgSfx guardName } {
                puts $srcFile [format "endpackage : ${pkgName}${pkgSfx}"];
                puts $srcFile [format "\n`endif //%s"  $guardName];
        }

        #--------------------------------------------------------------------------
        #--------------------------------------------------------------------------
        proc genKTable { {fileName srcFile} {stageNum StageNum} {lineSize 4} } {
                upvar 1 $fileName fName
                upvar 1 $stageNum sNum
        
                puts $fName [format "    //--------------------------------------------------------------------------"];
                puts $fName [format "    typedef bit unsigned \[WORD_WIDTH-1:0\] KTable_t\[0:STAGE_NUM-1\];"];
                emptyLine fName;
                puts $fName [format "    //--------------------------------------------------------------------------"];
                puts $fName [format "    localparam KTable_t KTable = '\{"];

                set i 0
                while { $i < $sNum } {  
                        puts -nonewline $fName [format "%35s" " "];
                        for { set j 0 } { $j < $lineSize } { incr j } {
                                puts -nonewline $fName [format " 'h%08x" [expr { int(floor((2**32)*abs(sin($i + 1)))) }]];
                                incr i;
                                if { $i != $sNum} {
                                        puts -nonewline $fName [format "%1s" ","];
                                }
                        }
                        emptyLine fName;
                }
                puts $fName [format "                                  \};"];
                emptyLine fName;
        }

        #--------------------------------------------------------------------------
        #--------------------------------------------------------------------------
        proc genGTable { {fileName srcFile} {stageNum StageNum} {lineSize 16} } {
                upvar 1 $fileName fName
                upvar 1 $stageNum sNum
                
                puts $fName [format "    //--------------------------------------------------------------------------"];
                puts $fName [format "    typedef bit unsigned \[IDX_WIDTH-1:0\] GTable_t\[0:STAGE_NUM-1\];"];
                emptyLine fName;
                emptyLine fName;
                puts $fName [format "    //--------------------------------------------------------------------------"];
                puts $fName [format "    localparam GTable_t GTable = '\{"];

                set i 0
                while { $i < $sNum } {  
                        puts -nonewline $fName [format "%35s" " "];
                        for { set j 0 } { $j < $lineSize } { incr j } {
                                
                                if { ($i >= 0) && ($i <= 15)  } {
                                                set g $i
                                } elseif { ($i >= 16) && ($i <= 31) } {
                                                set g [expr { (5*$i + 1) % 16 } ]
                                } elseif { ($i >= 32) && ($i <= 47) } {
                                                set g [expr { (3*$i + 5) % 16 } ]
                                } elseif { ($i >= 48) && ($i <= 63) } {
                                                set g [expr { (7*$i) % 16 } ]
                                } 
                                puts -nonewline $fName [format " %2d" $g];
                                
                                incr i;
                                if { $i != $sNum} {
                                        puts -nonewline $fName [format "%1s" ","];
                                }
                        }
                        emptyLine fName;
                }
                
                puts $fName [format "                                  \};"];
                emptyLine fName;
        }

}

#*******************************************************************************
#*******************************************************************************
proc slon5_gen { srcDir prjName pkgName descrTxt } {
        
        namespace import slon5_script::*;
        
        #--------------------------------------------------------------------------
        set pkgSfx "_pkg"
        set guardName  [string toupper [set name "${pkgName}_svh"]];
        set srcFile [open [set fileName ${srcDir}/${pkgName}.svh] w];
        fileHeader $srcFile $prjName $pkgName $pkgSfx $descrTxt $guardName
        
        #--------------------------------------------------------------------------
        set StageNum  64
        genKTable srcFile StageNum;
        genGTable srcFile StageNum;
        
        #--------------------------------------------------------------------------
        fileFooter $srcFile $pkgName $pkgSfx $guardName
        close $srcFile;
}
